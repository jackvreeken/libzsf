name: CI

on:
  pull_request:
  push:


jobs:
  style-c:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install and update dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format git
      - name: Check C code formatting
        run: |
          clang-format -i src/* include/*
          git diff --exit-code

  style-python:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          pip install tox
          cd wrappers/python
      - name: Check Python code formatting
        run: |
          tox -vv -e flake8,black

  build-linux:
    needs:
      - style-c
      - style-python
    runs-on: ubuntu-latest
    container:
      image: quay.io/pypa/manylinux2010_x86_64
      env:
        CC: gcc
        CXX: g++
    # We need CMake 3.14+. To get it we just use the Python manylinux wheel of
    # it, because (1) we know it is compatible and (2) is easier/faster than
    # compiling it ourselves.
    steps:
      - uses: actions/checkout@v3
      - name: Install CMake
        run: /opt/python/cp36-cp36m/bin/pip install cmake
      - name: Build C library
        run: |
          mkdir build
          cd build
          /opt/python/cp36-cp36m/bin/cmake -DUSE_FAST_MATH=ON -DUSE_FAST_TANH=ON -DCMAKE_INSTALL_PREFIX=../dist -DCMAKE_BUILD_TYPE=Release ..
          make -j4 install
      - name: Build wheel
        run: |
          cd ../wrappers/python
          /opt/python/cp36-cp36m/bin/python setup.py build_ext --library-dirs=../../dist/lib --include-dirs=../../include bdist_wheel --py-limited-api=cp36
          auditwheel repair dist/*

      - uses: actions/upload-artifact@v3
        with:
          name: python-build-linux
          path: |
            dist/
            wrappers/python/wheelhouse/
          retention-days: 5

  # test:
  #   needs: style
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, macos-latest, windows-latest]
  #       python-version: [3.7, 3.8, 3.9]

  #   steps:
  #   - uses: actions/checkout@v3
  #     with:
  #       submodules: true
  #   - uses: actions/setup-python@v4
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - run: |
  #       python -m pip install --upgrade pip
  #       pip install tox
  #   - run: tox -e py

  # coverage:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: ${{ !startsWith(github.ref, 'refs/tags') }}

  #   steps:
  #   - uses: actions/checkout@v3
  #     with:
  #       submodules: true
  #   - uses: actions/setup-python@v4
  #     with:
  #       python-version: 3.9
  #   - run: |
  #       python -m pip install --upgrade pip
  #       pip install tox
  #   - run: tox -e coverage
  #   - uses: codecov/codecov-action@v3
  #     with:
  #       file: ./coverage.xml

  # deploy:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags') }}

  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: actions/setup-python@v4
  #     with:
  #       python-version: 3.9
  #   - run: |
  #       python -m pip install --upgrade pip
  #       pip install setuptools wheel twine
  #   - env:
  #       TWINE_USERNAME: __token__
  #       TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  #     run: |
  #       python setup.py sdist bdist_wheel
  #       twine upload dist/*
